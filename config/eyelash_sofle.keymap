#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

//&mt {
//    flavor = "balanced";
//    quick-tap-ms = <175>;
//    tapping-term-ms = <300>;
//    require-prior-idle-ms = <150>;
//};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        shift-combo {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <59 60>;
            layers = <0>;
        };

        enter-combo {
            bindings = <&kp ENTER>;
            key-positions = <57 56>;
            layers = <0>;
        };

        up {
            bindings = <&kp UP_ARROW>;
            key-positions = <22 35>;
        };

        down {
            bindings = <&kp DOWN_ARROW>;
            key-positions = <35 48>;
        };

        right {
            bindings = <&kp RIGHT_ARROW>;
            key-positions = <35 36>;
        };

        left {
            bindings = <&kp LEFT_ARROW>;
            key-positions = <35 34>;
        };
    };

    macros {
        mo_rgb1: mo_rgb1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(122,100,50) &mo 1>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_COLOR_HSB(179,100,50)>;

            label = "MO_RGB1";
        };

        mo_rgb2: mo_rgb2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&rgb_ug RGB_COLOR_HSB(289,100,50) &mo 2>,
                <&macro_pause_for_release>,
                <&rgb_ug RGB_COLOR_HSB(179,100,50)>;

            label = "MO_RGB2";
        };

        //mo_rgb3: mo_rgb3 {
        //    compatible = "zmk,behavior-macro";
        //    #binding-cells = <0>;
        //    bindings =
        //        <&tog 3 &rgb_ug RGB_COLOR_HSB(59,100,50)>,
        //        <&macro_pause_for_release>,
        //        <&rgb_ug RGB_COLOR_HSB(179,100,50) &tog 3>;
//
//            label = "MO_RGB3";
//        };
//
//        mo_rgb4: mo_rgb4 {
//            compatible = "zmk,behavior-macro";
//            #binding-cells = <0>;
//            bindings =
//                <&tog 4 &rgb_ug RGB_COLOR_HSB(360,100,50)>,
//                <&macro_pause_for_release>,
//                <&rgb_ug RGB_COLOR_HSB(179,100,50) &tog 4>;
//
//            label = "MO_RGB4";
//        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp TILDE   &kp N1  &kp N2       &kp N3           &kp N4          &kp N5       &kp UP_ARROW     &kp N6     &kp N7           &kp N8        &kp N9               &kp N0      &kp MINUS
&kp ESCAPE  &kp Q   &kp W        &kp E            &kp R           &kp T        &kp DOWN_ARROW   &kp Y      &kp U            &kp I         &kp O                &kp P       &kp BACKSPACE
&kp TAB     &kp A   &mt LCTRL S  &mt LGUI D       &mt LALT F      &kp G        &kp LEFT_ARROW   &kp H      &mt RIGHT_ALT J  &mt RGUI K    &mt RIGHT_CONTROL L  &kp SEMI    &kp BSLH
&kp CARET   &kp Z   &kp X        &kp C            &kp V           &kp B        &kp RIGHT_ARROW  &kp N      &kp M            &kp COMMA     &kp DOT              &kp FSLH    &kp APOS
&kp K_MUTE  &to 0   &mo_rgb4     &lt 1 BACKSPACE  &kp LEFT_SHIFT  &kp SPACE    &kp ENTER        &kp ENTER  &kp SPACE        &lt 2 DELETE  &mo_rgb3 3           &kp K_MENU
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_3 {
            bindings = <
&out OUT_BLE  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &bt BT_CLR  &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &out OUT_USB
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &mmv MOVE_DOWN   &kp F7      &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&kp ESC       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &mmv MOVE_LEFT   &kp N6      &kp N7           &kp N8           &kp N9           &kp N0           &kp EQUAL
&kp CARET     &kp APOS      &kp BSLH      &kp FSLH      &kp LBKT      &kp DOLLAR      &mmv MOVE_RIGHT  &kp SEMI    &kp RBKT         &kp MINUS        &kp COMMA        &kp DOT          &kp ENTER
&mkp RCLK     &trans        &trans        &trans        &trans        &trans          &mkp LCLK        &kp HOME    &kp PAGE_UP      &kp PAGE_DOWN    &kp END          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans   &trans   &trans   &trans    &trans  &trans        &trans  &trans  &trans  &trans     &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans  &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans  &kp SLASH     &kp N4  &kp N5  &kp N6  &kp DOT    &trans
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp N0        &kp N1  &kp N2  &kp N3  &kp MINUS  &trans
&trans  &trans  &trans   &trans   &trans   &trans    &trans  &trans        &trans  &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        layer_2 {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
